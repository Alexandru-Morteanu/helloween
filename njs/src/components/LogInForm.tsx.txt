"use client";
import axios, { AxiosError, AxiosResponse } from "axios";
import Link from "next/link";
import { useRouter } from "next/navigation";
import { useState, ChangeEvent, useEffect } from "react";

export default () => {
  //Interfaces
  interface userData {
    username: string;
    password: string;
  }
  interface wrongData {
    possible: boolean;
    message: string;
  }

  //consts/data
  const [userData, SetUserData] = useState<userData>({
    username: "",
    password: "",
  });

  const [wrongDataMsg, setWrongDataMsg] = useState<wrongData>({
    possible: false,
    message: "It's spooki time!",
  });

  //Functions
  const ChangeEvent = (event: ChangeEvent<HTMLInputElement>) => {
    const { id, value } = event.target;
    SetUserData((prevContent: any) => ({
      ...prevContent,
      [id]: value,
    }));
  };
  /*
  - Get the value of each input using the id and matching it with the "UserData".
  - Automatically doing the value attribution. Use name (only for inputs) instead
   of id if you want that.
  */
  const SubmitEvent = async (e: React.FormEvent) => {
    e.preventDefault();
    try {
      await axios
        .post("/api/login", userData, { withCredentials: true })
        .then((response) => {
          if (response.data.success) {
            setWrongDataMsg({
              possible: true,
              message: `Welcome ${userData.username}!`,
            });
          } else {
            setWrongDataMsg({ possible: true, message: response.data.message });
          }
        });
    } catch (error: any) {
      if (error.response) {
        setWrongDataMsg({
          possible: true, //Possible helps to know if the operation was possible from an error
          message: error.response.data.message, //The actually req.error message who was implemented in the backend
        });
      } else if (error.request) {
        setWrongDataMsg({ possible: true, message: "Server's on vacation üèñÔ∏è" }); //No response at all
      } else {
        setWrongDataMsg({
          possible: true,
          message: "Damn...Code broke...Contact an admin!", //Code Broke, Code error
        });
      }
    }
  };
  return (
    <div className="flex self-center flex-col">
      <form
        onSubmit={SubmitEvent}
        className="sm:p-4 p-4 rounded-lg shadow-lg w-96"
      >
        <div className="flex flex-col items-center">
          <h2 className="text-2xl font-semibold mb-2 flex flex-row ">
            {"\u{1F383} Login"}
          </h2>
          <p
            className="text-red-700 text-xs"
            style={
              !wrongDataMsg.possible ? { opacity: "0%" } : { opacity: "100%" }
            }
          >
            {wrongDataMsg.message}
          </p>
        </div>
        <div>
          <label
            className="block text-white text-sm font-medium mb-2"
            htmlFor="username"
          >
            Username
          </label>
          <input
            className="w-full bg-gray-900 text-white border border-red-600 rounded-md py-2 px-3 focus:outline-none focus:border-red-400"
            type="text"
            id="username"
            onChange={ChangeEvent}
            placeholder="Username"
            required
          />
        </div>

        <div className="mb-4">
          <label
            className="block text-white text-sm font-medium mb-2"
            htmlFor="password"
          >
            Password
          </label>
          <input
            className="w-full bg-gray-900 text-white border border-red-600 rounded-md py-2 px-3 focus:outline-none focus:border-red-400"
            type="password"
            id="password"
            onChange={ChangeEvent}
            placeholder="Password"
            required
          />
        </div>

        <div className="mb-6">
          <button
            className="w-full bg-red-500 hover:bg-red-600 text-white font-semibold py-2 px-4 rounded-md transition duration-300"
            type="submit"
          >
            Login
          </button>
        </div>

        <p className="text-gray-400 text-sm text-center">
          Don't have an account?{" "}
          <Link className="text-red-500 hover:underline" href="./getAccount">
            Get One Now!
          </Link>
        </p>
      </form>
    </div>
  );
};
